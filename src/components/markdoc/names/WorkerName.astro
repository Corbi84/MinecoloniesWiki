---
import VersionContent from '@components/version/VersionContent.astro';
import {
  getWorkerData,
  getWorkerIdFromFrontmatter,
  getWorkerReferenceBuilding,
  groupWorkerDataByVersion,
  type MarkdocWorkerComponent
} from '@utils/workers';

interface Props extends MarkdocWorkerComponent {
  building?: string;
  plural?: boolean;
}

const { frontmatter, name, building, plural = false } = Astro.props;

const workerId = await getWorkerIdFromFrontmatter(frontmatter);
const workerTarget = name ?? workerId ?? '';
const workerData = await getWorkerData(workerTarget);
const workerDataPerVersion = await groupWorkerDataByVersion(workerData);
const buildingData = await getWorkerReferenceBuilding(building, workerData);
---

{
  workerDataPerVersion.map(async (worker) => (
    <VersionContent versions={worker.versions} inline>
      {frontmatter?.type !== 'building' || workerId !== workerData.id ? (
        <a href={'/wiki/' + buildingData.slug}>{plural ? worker.item.data.plural : worker.item.data.name}</a>
      ) : (
        <span>{plural ? worker.item.data.plural : worker.item.data.name}</span>
      )}
    </VersionContent>
  ))
}
