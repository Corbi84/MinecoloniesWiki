---
import VersionContent from '@components/version/VersionContent.astro';
import { getBuildingLink } from '@utils/building';
import {
  getWorkerData,
  getWorkerIdFromFrontmatter,
  getWorkerReferenceBuilding,
  groupWorkerDataByVersion,
  type MarkdocWorkerComponent
} from '@utils/workers';

interface Props extends MarkdocWorkerComponent {
  building?: string;
  plural?: boolean;
}

const { frontmatter, name, building, plural = false } = Astro.props;

const workerId = await getWorkerIdFromFrontmatter(frontmatter);
const workerTarget = name ?? workerId ?? '';
const workerData = await getWorkerData(workerTarget);
const workerNames = await groupWorkerDataByVersion(workerData, (data) => (plural ? data.plural : data.name));
const buildingData = await getWorkerReferenceBuilding(building, frontmatter, workerData);
const buildingLink = getBuildingLink(buildingData);
---

{
  workerNames.map(async (workerName) => (
    <VersionContent versions={workerName.versions} inline>
      {frontmatter?.type !== 'building' || workerId !== workerData.id ? (
        <a href={buildingLink}>{workerName.item.data}</a>
      ) : (
        <span>{workerName.item.data}</span>
      )}
    </VersionContent>
  ))
}
