---
import type { ResearchEffectRegular } from 'src/content/_research';

import { formatForgeString, toTitleCase } from '../../../util/string';

interface Props {
  effect: ResearchEffectRegular;
  level: number;
}

const { effect, level } = Astro.props;

function parseFormatString(format: string, effectStrength: number = 0, absoluteEffectStrength: number = 0): string {
  // Forge format specifiers
  format = formatForgeString(
    format,
    effectStrength.toString(),
    absoluteEffectStrength.toString(),
    Math.round(effectStrength * 100).toString(),
    Math.round(absoluteEffectStrength * 100).toString()
  );

  return toTitleCase(format);
}

function parseRegularEffectFormat(effectData: ResearchEffectRegular) {
  const format = effectData.format;
  if (effectData.levels) {
    const currentLevel = effectData.levels[level - 1];
    const previousLevel = level === 1 ? 0 : effectData.levels[level - 2];
    const effectStrength = currentLevel - previousLevel;
    return parseFormatString(format, effectStrength, currentLevel);
  }

  return parseFormatString(format, undefined);
}
---

<span>{parseRegularEffectFormat(effect)}</span>
